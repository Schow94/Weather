{"version":3,"sources":["bg2.svg","Day.js","WeatherCard.js","WeatherApp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Day","props","classes","useStyles","low","high","day","selectDay","showOneDay","react_default","a","createElement","className","Typography","style","fontSize","color","concat","makeStyles","width","height","display","flexDirection","alignItems","justifyContent","padding","WeatherCard","city","currentTemp","forecast","selectedDay","selectedDayWeather","cardSize","Card","parentCard","CardContent","variant","marginRight","degree","humidity","wind","CardActions","Button","size","week","map","i","key","temp","marginTop","marginBottom","opacity","axios","require","API_KEY","process","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getToday","date","Date","slice","console","log","setState","state","text","rain","skies","main","description","handleChange","bind","assertThisInitialized","getData","handleSubmit","_this2","currentUrl","get","then","response","data","catch","error","_this3","fiveDayUrl","list","item","push","temp_min","temp_max","speed","Math","round","sort","dayOneHumid","dayTwoHumid","dayThreeHumid","dayFourHumid","dayFiveHumid","average","arr","reduce","acc","c","length","dayOneWind","dayTwoWind","dayThreeWind","dayFourWind","dayFiveWind","getFiveDay","e","defineProperty","target","name","value","preventDefault","_this4","currentDayData","filter","styles","input","title","container","formContainer","onSubmit","TextField","autoComplete","id","aria-describedby","type","placeholder","onChange","onClick","Component","fontFamily","backgroundColor","backgroundPosition","backgroundSize","backgroundRepeat","overflow","button","marginLeft","buttons","letterSpacing","margin","CssBaseline","WeatherApp_App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","App_App","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b8340391.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg2.5529be61.svg\";","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport default function Day(props) {\n  const classes = useStyles();\n  const { low, high, day, selectDay, showOneDay } = props;\n\n  // const selectOneDay = (day) => {\n  //   selectDay(day);\n  //   showOneDay(day);\n  // };\n\n  return (\n    <div className={classes.day}>\n      <Typography>{day}</Typography>\n      <i\n        style={{ fontSize: '5vw', color: '#fcdd74' }}\n        className=\"fa fa-circle\"\n      />\n      <Typography>{`${low}° ${high}°`}</Typography>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles({\n  day: {\n    width: '18vw',\n    height: '9em',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: '10px',\n    color: '#a8a7a7',\n  },\n});\n","import React from 'react';\n\nimport Day from './Day';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function WeatherCard(props) {\n  const classes = useStyles();\n\n  const {\n    city,\n    currentTemp,\n    forecast,\n    selectedDay,\n    selectDay,\n    showOneDay,\n    selectedDayWeather,\n    cardSize\n  } = props;\n\n  function renderWeek() {\n    return forecast.map((day, i) => (\n      <Day\n        selectDay={selectDay}\n        showOneDay={showOneDay}\n        key={i}\n        day={day.day}\n        low={day.temp[0]}\n        high={day.temp[15]}\n      />\n    ));\n  }\n\n  return (\n    <Card className={classes.parentCard}>\n      <div className={cardSize}>\n        <CardContent>\n          <Typography variant=\"h5\" color=\"textSecondary\">\n            {city}\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {selectedDay}\n          </Typography>\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              justifyContent: 'space-between'\n            }}\n          >\n            <div style={{ display: 'flex' }}>\n              <i\n                style={{\n                  marginRight: '0.2em',\n                  fontSize: '5vw',\n                  color: '#d4d2d2'\n                }}\n                className=\"fa fa-cloud\"\n              />\n              <Typography className={classes.currentTemp}>\n                {currentTemp}\n                <span className={classes.degree}>°F</span>\n              </Typography>\n            </div>\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'column'\n              }}\n            >\n              <Typography>Precipitation:</Typography>\n              <Typography>\n                {selectedDayWeather.humidity\n                  ? `Humidity: ${selectedDayWeather.humidity}`\n                  : `Humidity: 0%`}\n              </Typography>\n              <Typography>\n                {selectedDayWeather.wind\n                  ? `Wind: ${selectedDayWeather.wind}`\n                  : `Wind: 0 mph`}\n              </Typography>\n            </div>\n          </div>\n        </CardContent>\n      </div>\n\n      <CardActions>\n        <Button size=\"small\">More Weather Info</Button>\n      </CardActions>\n      <div className={classes.week}>{renderWeek()}</div>\n    </Card>\n  );\n}\n\nconst useStyles = makeStyles({\n  parentCard: {\n    height: '65vh',\n    width: '95vw',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    padding: '1vh',\n    marginTop: '1vh',\n    marginBottom: '1vh'\n  },\n  currentTemp: {\n    fontSize: '4vw'\n  },\n  week: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'row',\n    marginBottom: '3vh'\n  },\n  degree: {\n    fontSize: '2.5vh',\n    opacity: 0.8\n  },\n  cardSize: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\n","import React, { Component } from 'react';\n\nimport WeatherCard from './WeatherCard';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport bg from './bg2.svg';\n\nconst axios = require('axios');\nconst API_KEY = process.env.REACT_APP_WEATHER_API_KEY;\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n      city: 'San Francisco',\n      currentTemp: '',\n      selectedDay: 'Mon',\n      selectedDayWeather: {\n        day: 'Mon',\n        temp: [],\n        humidity: '',\n        wind: '',\n        rain: '',\n      },\n      forecast: [\n        {\n          day: '',\n          temp: [],\n          humidity: '',\n          wind: '',\n          rain: '',\n          skies: { main: '', description: '' },\n        },\n        {\n          day: '',\n          temp: [],\n          humidity: '',\n          wind: '',\n          rain: '',\n          skies: { main: '', description: '' },\n        },\n        {\n          day: '',\n          temp: [],\n          humidity: '',\n          wind: '',\n          rain: '',\n          skies: { main: '', description: '' },\n        },\n        {\n          day: '',\n          temp: [],\n          humidity: '',\n          wind: '',\n          rain: '',\n          skies: { main: '', description: '' },\n        },\n        {\n          day: '',\n          temp: [],\n          humidity: '',\n          wind: '',\n          rain: '',\n          skies: { main: '', description: '' },\n        },\n      ],\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.getData = this.getData.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.selectDay = this.selectDay.bind(this);\n    this.showOneDay = this.showOneDay.bind(this);\n  }\n\n  getData(city) {\n    let currentUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=imperial&APPID=${API_KEY}`;\n    return axios\n      .get(currentUrl)\n\n      .then((response) => {\n        const data = response.data;\n        let currentTemp = data.main.temp;\n        this.setState({\n          city: city,\n          currentTemp: currentTemp,\n        });\n      })\n\n      .catch((error) => console.log('There was an error: ', error));\n  }\n\n  getFiveDay(city) {\n    let fiveDayUrl = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=imperial&APPID=${API_KEY}`;\n    return axios\n      .get(fiveDayUrl)\n\n      .then((response) => {\n        const data = response.data.list;\n        console.log('data', data);\n\n        let week = [];\n        let humidity = [];\n        const temp = [];\n        let wind = [];\n        let rain = [];\n\n        data.map((item) => {\n          temp.push(item.main.temp_min);\n          temp.push(item.main.temp_max);\n          return temp;\n        });\n\n        data.map((item) => {\n          humidity.push(item.main.humidity);\n          return humidity;\n        });\n\n        data.map((item) => {\n          wind.push(item.wind.speed);\n          return wind;\n        });\n\n        // STILL WORKING ON FILTERING OUT rain objs without a rain[3h] prop\n        data.map((item) => {\n          return rain.push(item.rain);\n        });\n        // Leave rain out for now\n\n        const day = Date().slice(0, 3);\n        console.log(day);\n\n        if (day === 'Sun') {\n          week = ['Sun', 'Mon', 'Tue', 'Wed', 'Thur'];\n        } else if (day === 'Mon') {\n          week = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'];\n        } else if (day === 'Tue') {\n          week = ['Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n        } else if (day === 'Wed') {\n          week = ['Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n        } else if (day === 'Thu') {\n          week = ['Thu', 'Fri', 'Sat', 'Sun', 'Mon'];\n        } else if (day === 'Fri') {\n          week = ['Fri', 'Sat', 'Sun', 'Mon', 'Tue'];\n        }\n        //case where day is Saturday\n        else {\n          week = ['Sat', 'Sun', 'Mon', 'Tue', 'Wed'];\n        }\n\n        let forecast = [\n          { day: week[0], temp: [], humidity: '' },\n          { day: week[1], temp: [], humidity: '' },\n          { day: week[2], temp: [], humidity: '' },\n          { day: week[3], temp: [], humidity: '' },\n          { day: week[4], temp: [], humidity: '' },\n        ];\n\n        //Add High/Low temps for each day\n        for (let i = 0; i < 16; i++) {\n          forecast[0].temp.push(Math.round(temp[i]));\n          forecast[0].temp.sort();\n        }\n\n        for (let i = 16; i < 32; i++) {\n          forecast[1].temp.push(Math.round(temp[i]));\n          forecast[1].temp.sort();\n        }\n\n        for (let i = 32; i < 48; i++) {\n          forecast[2].temp.push(Math.round(temp[i]));\n          forecast[2].temp.sort();\n        }\n\n        for (let i = 48; i < 64; i++) {\n          forecast[3].temp.push(Math.round(temp[i]));\n          forecast[3].temp.sort();\n        }\n\n        for (let i = 64; i < 80; i++) {\n          forecast[4].temp.push(Math.round(temp[i]));\n          forecast[4].temp.sort();\n        }\n\n        //Add humidities for each day & avg to get 1 humidity/day\n        let dayOneHumid = [];\n        let dayTwoHumid = [];\n        let dayThreeHumid = [];\n        let dayFourHumid = [];\n        let dayFiveHumid = [];\n\n        const average = (arr) =>\n          Math.round(arr.reduce((acc, c) => acc + c) / arr.length);\n\n        for (let i = 0; i < 8; i++) {\n          dayOneHumid.push(humidity[i]);\n          // forecast[0].humidity.push(humidity[i]);\n        }\n        forecast[0].humidity = average(dayOneHumid);\n\n        for (let i = 8; i < 16; i++) {\n          dayTwoHumid.push(humidity[i]);\n        }\n        forecast[1].humidity = average(dayTwoHumid);\n\n        for (let i = 16; i < 24; i++) {\n          dayThreeHumid.push(humidity[i]);\n        }\n        forecast[2].humidity = average(dayThreeHumid);\n\n        for (let i = 24; i < 32; i++) {\n          dayFourHumid.push(humidity[i]);\n        }\n        forecast[3].humidity = average(dayFourHumid);\n\n        for (let i = 32; i < 40; i++) {\n          dayFiveHumid.push(humidity[i]);\n        }\n        forecast[4].humidity = average(dayFiveHumid);\n\n        // Wind\n        let dayOneWind = [];\n        let dayTwoWind = [];\n        let dayThreeWind = [];\n        let dayFourWind = [];\n        let dayFiveWind = [];\n\n        for (let i = 0; i < 8; i++) {\n          dayOneWind.push(wind[i]);\n        }\n        forecast[0].wind = average(dayOneWind);\n\n        for (let i = 8; i < 16; i++) {\n          dayTwoWind.push(wind[i]);\n        }\n        forecast[1].wind = average(dayTwoWind);\n\n        for (let i = 16; i < 24; i++) {\n          dayThreeWind.push(wind[i]);\n        }\n        forecast[2].wind = average(dayThreeWind);\n\n        for (let i = 24; i < 32; i++) {\n          dayFourWind.push(wind[i]);\n        }\n        forecast[3].wind = average(dayFourWind);\n\n        for (let i = 32; i < 40; i++) {\n          dayFiveWind.push(wind[i]);\n        }\n        forecast[4].wind = average(dayFiveWind);\n\n        // Rain - API returning some undefined rain values\n        // messes up the app\n\n        let dayOneRain = [];\n        let dayTwoRain = [];\n        let dayThreeRain = [];\n        let dayFourRain = [];\n        let dayFiveRain = [];\n\n        // for (let i = 0; i < 8; i++) {\n        //   dayOneRain.push(rain[i]);\n        // }\n        // forecast[0].rain = average(dayOneRain);\n\n        // for (let i = 8; i < 16; i++) {\n        //   dayTwoWind.push(rain[i]);\n        // }\n        // forecast[1].rain = average(dayTwoRain);\n        // console.log('array', dayTwoRain);\n\n        // for (let i = 16; i < 24; i++) {\n        //   dayThreeRain.push(rain[i]);\n        // }\n        // forecast[2].rain = average(dayThreeRain);\n\n        // for (let i = 24; i < 32; i++) {\n        //   dayFourRain.push(rain[i]);\n        // }\n        // forecast[3].rain = average(dayFourRain);\n\n        // for (let i = 32; i < 40; i++) {\n        //   dayFiveRain.push(rain[i]);\n        // }\n        // forecast[4].rain = average(dayFiveRain);\n\n        // console.log(rain);\n\n        // console.log(humidity);\n        // console.log(dayOneHumid);\n\n        this.setState({\n          city: city,\n          forecast: forecast,\n        });\n      })\n\n      .catch((error) => console.log('There was an error: ', error));\n  }\n\n  getToday = () => {\n    const date = new Date();\n    const day = `${date}`.slice(0, 3);\n    console.log(date);\n\n    this.setState({\n      selectedDay: day,\n    });\n  };\n\n  componentDidMount() {\n    this.getData(this.state.city);\n    this.getFiveDay(this.state.city);\n    this.getToday();\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    this.getData(this.state.text);\n    this.getFiveDay(this.state.text);\n    this.setState({ text: '' });\n  }\n\n  selectDay(day) {\n    this.setState({\n      selectedDay: day,\n    });\n  }\n\n  showOneDay(day) {\n    let currentDayData = this.state.forecast.filter(\n      (day) => day.day === this.state.selectedDay\n    );\n\n    console.log(currentDayData);\n\n    this.setState({\n      selectedDayWeather: currentDayData[0],\n    });\n  }\n\n  render() {\n    console.log('state', this.state);\n    const { input, title } = styles;\n    return (\n      <div style={styles.container}>\n        <h1 style={title}>Weather App</h1>\n\n        <form style={styles.formContainer} onSubmit={this.handleSubmit}>\n          <TextField\n            style={{ width: '40vw', marginBottom: '2vh' }}\n            autoComplete=\"off\"\n            id=\"my-input\"\n            aria-describedby=\"my-helper-text\"\n            type=\"text\"\n            name=\"text\"\n            placeholder=\"Enter a City\"\n            onChange={this.handleChange}\n            value={this.state.text}\n          />\n          <Button\n            onClick={this.handleSubmit}\n            className=\"button\"\n            color=\"primary\"\n            variant=\"contained\"\n            style={{ height: '5vh' }}\n          >\n            Check Weather\n          </Button>\n        </form>\n\n        <WeatherCard\n          city={this.state.city}\n          currentTemp={this.state.currentTemp}\n          forecast={this.state.forecast}\n          selectedDay={this.state.selectedDay}\n          selectDay={this.selectDay}\n          selectedDayWeather={this.state.selectedDayWeather}\n          showOneDay={this.showOneDay}\n        />\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n    width: '100vw',\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    fontFamily: 'Roboto, sans-serif',\n    /* background by SVGBackgrounds */\n    // backgroundColor: '#1baa13',\n    backgroundColor: '#e1e3e6',\n    // backgroundImage: `url(${bg})`,\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    overflow: 'scroll',\n  },\n  button: { marginLeft: '10px' },\n  buttons: {\n    marginTop: '30px',\n    marginBottom: '10px',\n  },\n  formContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: '1vh',\n    width: '40vw',\n  },\n  input: {\n    marginTop: '1em',\n    marginRight: '1em',\n    width: '300px',\n  },\n  title: {\n    fontSize: '5vh',\n    letterSpacing: '8px',\n    margin: '2vh',\n  },\n};\n","import React, { Component } from 'react';\nimport WeatherApp from './WeatherApp';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        <CssBaseline />\n        <WeatherApp />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}